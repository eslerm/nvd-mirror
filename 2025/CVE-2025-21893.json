{
    "id": "CVE-2025-21893",
    "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "published": "2025-03-31T20:15:14.613",
    "lastModified": "2025-03-31T20:15:14.613",
    "vulnStatus": "Received",
    "cveTags": [],
    "descriptions": [
        {
            "lang": "en",
            "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nkeys: Fix UAF in key_put()\n\nOnce a key's reference count has been reduced to 0, the garbage collector\nthread may destroy it at any time and so key_put() is not allowed to touch\nthe key after that point.  The most key_put() is normally allowed to do is\nto touch key_gc_work as that's a static global variable.\n\nHowever, in an effort to speed up the reclamation of quota, this is now\ndone in key_put() once the key's usage is reduced to 0 - but now the code\nis looking at the key after the deadline, which is forbidden.\n\nFix this by using a flag to indicate that a key can be gc'd now rather than\nlooking at the key's refcount in the garbage collector."
        }
    ],
    "metrics": {},
    "references": [
        {
            "url": "https://git.kernel.org/stable/c/6afe2ea2daec156bd94ad2c5a6f4f4c48240dcd3",
            "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
        },
        {
            "url": "https://git.kernel.org/stable/c/75845c6c1a64483e9985302793dbf0dfa5f71e32",
            "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
        },
        {
            "url": "https://git.kernel.org/stable/c/f6a3cf833188e897c97028cd7b926e3f2cb1a8c0",
            "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
        }
    ]
}